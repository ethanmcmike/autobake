(****** QuickLD compiler *******************************)
(****** Copyright Rockwell Automation Canada, Ltd ******)
(****** ST *********************************************)

(*************** Rung **********************************)
(*Detect new start*)
__STEPPRAGMA
0,1
__ENDSTEPPRAGMA
(*Label :*)(**)
; (*Pulse detection on : _IO_EM_DI_00 with __MEMO__1___IO_EM_DI_00 *)
INITIALIZE := NOT(PROCESS_RUNNING) AND (_IO_EM_DI_00 AND NOT(__MEMO__1___IO_EM_DI_00)) ;

(*************** Code for the end of Rung **************)
__GL __LG0001 ;
__MEMO__1___IO_EM_DI_00 := _IO_EM_DI_00 ; (*Pulse detection on : _IO_EM_DI_00 with __MEMO__1___IO_EM_DI_00 *)


(*************** Rung **********************************)
(*Initialize, set step to 0, next step*)
__STEPPRAGMA
0,3
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB1 := INITIALIZE ;
IF __EDTB1 THEN
PROCESS_INDEX := (  0) ;
END_IF ;
__MO_1GAIN_1 := __EDTB1 ;
__EDTB2 := __EDTB1 ;
IF __EDTB2 THEN
(*Set coil*)
PROCESS_RUNNING := TRUE ;
END_IF ;
NEXT_STEP := __EDTB1 ;

(*************** Code for the end of Rung **************)
__GL __LG0002 ;


(*************** Rung **********************************)
(*Increment step*)
__STEPPRAGMA
0,6
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB3 := NEXT_STEP ;
IF __EDTB3 THEN
PROCESS_INDEX := (PROCESS_INDEX + 1) ;
END_IF ;
__MO_PLUS_1 := __EDTB3 ;
__EDTB4 := __EDTB3 ;
IF __EDTB4 THEN
(*Reset coil*)
NEXT_STEP := FALSE ;
END_IF ;

(*************** Code for the end of Rung **************)
__GL __LG0003 ;


(*************** Rung **********************************)
(*Dispense sugar, vanilla, egg*)
__STEPPRAGMA
0,10
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB6 := PROCESS_RUNNING ;
IF __EDTB6 THEN
(* Operator output on : = with __EDTB5 *)
__EDTB5 := (PROCESS_INDEX = 1) ;
ELSE
__EDTB5 := FALSE ;
END_IF ;
__MO_EQUAL_1 := __EDTB5 ;
_IO_EM_DO_01 := __EDTB5 ;
_IO_EM_DO_02 := __EDTB5 ;
_IO_EM_DO_03 := __EDTB5 ;
NEXT_STEP := __EDTB5 AND NOT(_IO_EM_DO_01) AND NOT(_IO_EM_DO_02) AND NOT(_IO_EM_DO_03) ;

(*************** Code for the end of Rung **************)
__GL __LG0004 ;


(*************** Rung **********************************)
(*Mix*)
__STEPPRAGMA
0,15
__ENDSTEPPRAGMA
(*Label :*)(**)
__EDTB8 := PROCESS_RUNNING ;
IF __EDTB8 THEN
(* Operator output on : = with __EDTB7 *)
__EDTB7 := (PROCESS_INDEX = 2) ;
ELSE
__EDTB7 := FALSE ;
END_IF ;
__MO_EQUAL_2 := __EDTB7 ;
MIX := __EDTB7 ;
NEXT_STEP := __EDTB7 AND NOT(MIX) ;

(*************** Code for the end of Rung **************)
__GL __LG0005 ;


(*************** Code for the end of File **************)
__GL __LG0000 ;



(*************** Local Symbols table *******************)
(* __MEMO__1___IO_EM_DI_00 *)
(* __EDTB1 *)
(* __EDTB2 *)
(* __EDTB3 *)
(* __EDTB4 *)
(* __EDTB5 *)
(* __EDTB6 *)
(* __EDTB7 *)
(* __EDTB8 *)

